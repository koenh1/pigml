<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:ext="http://marklogic.com/xdmp/ext" targetNamespace="http://marklogic.com/xdmp/ext">
	<?xdmp-annotations all?>
	<xs:simpleType name="database-name">
		<xs:annotation>
			<xs:appinfo source="suggest">xdmp:databases()!xdmp:database-name(.)</xs:appinfo>
			<xs:appinfo source="validate">try{let $_:=xdmp:database(.) return true()}catch($ex){false()}</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:Name"/>
	</xs:simpleType>
	<xs:simpleType name="user-name">
		<xs:annotation>
			<xs:appinfo source="suggest"><![CDATA[import module namespace sec="http://marklogic.com/xdmp/security" at "/MarkLogic/security.xqy"; 
xdmp:invoke-function(function(){collection(sec:users-collection())},<options xmlns="xdmp:eval"><database>{xdmp:security-database()}</database></options>)//sec:user-name/data()]]></xs:appinfo>
			<xs:appinfo source="validate"><![CDATA[import module namespace sec="http://marklogic.com/xdmp/security" at "/MarkLogic/security.xqy";
declare variable $it as xs:string external;
xdmp:invoke-function(function(){sec:user-exists($it)},<options xmlns="xdmp:eval"><database>{xdmp:security-database()}</database></options>)]]></xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:Name"/>
	</xs:simpleType>
	<xs:simpleType name="role-name">
		<xs:annotation>
			<xs:appinfo source="suggest">
				<![CDATA[import module namespace sec="http://marklogic.com/xdmp/security" at "/MarkLogic/security.xqy"; 
xdmp:invoke-function(function(){distinct-values(sec:user-privileges('admin')!xdmp:privilege-roles(./sec:action/data(),./sec:kind/data())!sec:get-role-names(.)!(.,sec:get-role-names(xdmp:role-roles(.)))/data())},<options xmlns="xdmp:eval"><database>{xdmp:security-database()}</database></options>)]]>
				</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:Name"/>
	</xs:simpleType>
	<xs:simpleType name="capability">
		<xs:restriction base="xs:string">
			<xs:enumeration value="read"/>
			<xs:enumeration value="update"/>
			<xs:enumeration value="insert"/>
			<xs:enumeration value="execute"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="permission">
		<xs:attribute name="capability" type="ext:capability" use="required"/>
		<xs:attribute name="role" type="ext:role-name" use="required"/>
	</xs:complexType>
	<xs:simpleType name="collection-name">
		<xs:annotation>
			<xs:appinfo source="suggest">cts:collection-match(('/','/*/','http://*/'))</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:minLength value="1"/>
			<xs:pattern value="http://.+/|/.+/|/"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="directory-name">
		<xs:annotation>
			<xs:appinfo source="suggest">cts:uri-match(('/','/*/','http://*/'))</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:minLength value="1"/>
			<xs:pattern value="http://.+/|/.+/|/"/>
		</xs:restriction>
	</xs:simpleType>

</xs:schema>
