<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2014 rel. 2 sp1 (x64) (http://www.altova.com)-->
<entity-schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns="http://www.wolterskluwer.com/schemas/appollo/entity/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.wolterskluwer.com/schemas/appollo/entity/v1.0 wkb-entity-schema.xsd" namespace="http://www.wolterskluwer.com/ns/appollo/wkbe/example" at="/generated/entities/">
	<imports>
		<module name="example" namespace="http://www.wolterskluwer.com/ns/appollo/marklogic/entity/example" at="/lib/example.xqy"/>
	</imports>
	<data-types>
		<data-type name="address" mime-type="application/x-address+xml">
			<any-xml element="address"/>
		</data-type>
		<data-type name="message" mime-type="application/x-message+xml">
			<any-xml element="message"/>
		</data-type>
		<data-type name="text" mime-type="text/plain" type="xs:string">
		</data-type>
	</data-types>
	<entities>
		<entity-type name="message" directory="/messages/" depth="1" version="1.0.0">
			<constructors>
				<constructor name="create" function="create-message" module="example" argument-type="address"/>
				<constructor name="create-from-subject" function="create-message-from-subject" module="example" argument-type="text"/>
			</constructors>
			<canonizer function="canonical" module="example"/>
			<actions>
				<action name="add-receiver" function="add-receiver" module="example" argument-type="address"/>
				<action name="add-message" function="add-message" module="example" argument-type="message"/>
				<action name="set-subject" function="set-subject" module="example" argument-type="text"/>
				<action name="send" function="send" module="example">
					<match-execute-privilege any-of="http://www.wolterskluwer.com/ns/appollo/marklogic/entity/example/permission-send"/>
					<match-security-role any-of="example-sender"/>
					<match-security-role any-of="example-sender2"/>
				</action>
			</actions>
			<state-machine name="sent-state" initial-state="unsent" error-state="draft">
				<state name="unsent">
					<event action="send" async="true">
						<guard state="ready"/>
						<target state="sent"/>
					</event>
				</state>
				<state name="sent"></state>
			</state-machine>
			<state-machine name="message-state" initial-state="incomplete" error-state="incomplete">
				<state name="incomplete">
					<event action="add-receiver">
						<guard invert="true" state="sent"/>
						<target state="ready"/>
						<target state="incomplete"/>
					</event>
					<event action="set-subject">
						<guard invert="true" state="sent"/>
						<target state="ready"/>
						<target state="incomplete"/>
					</event>
					<event action="add-message">
						<guard invert="true" state="sent"/>
						<target state="ready"/>
						<target state="incomplete"/>
					</event>
				</state>
				<state name="ready">
					<event action="add-receiver">
						<guard invert="true" state="sent"/>
						<target state="ready"/>
					</event>
					<event action="set-subject">
						<guard invert="true" state="sent"/>
						<target state="ready"/>
					</event>
					<event action="add-message">
						<guard invert="true" state="sent"/>
						<target state="ready"/>
					</event>
				</state>
				<state name="final">
				</state>
			</state-machine>
		</entity-type>
	</entities>
</entity-schema>
